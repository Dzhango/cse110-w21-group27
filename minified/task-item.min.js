const createDrag=()=>{const a=document.createElement("span");return a.setAttribute("class","p-2 inline material-icons drag-btn hide"),a.textContent="drag_indicator",a},createCheckmark=()=>{const a=document.createElement("span");a.setAttribute("class","p-2 form-check form-check-inline");const b=document.createElement("input");b.setAttribute("class","form-check-input input-mysize large"),b.setAttribute("type","checkbox"),b.setAttribute("job","check");const c=document.createElement("label");return c.setAttribute("for","checkbox"),a.appendChild(b),a.appendChild(c),a},createTask=a=>{const b=document.createElement("p");return b.setAttribute("class","p-2 flex-md-fill text-nowrap task-item"),b.innerHTML=a.name,b},createProgressBar=a=>{let b=100*(a.current/a.number);b=100<=b?"100%":`${b.toFixed(2)}%`;const c=document.createElement("div");c.setAttribute("class","flex-column progress");const d=document.createElement("div");return a.current>a.number?d.setAttribute("class","progress-bar progress-bar-striped bg-danger"):d.setAttribute("class","progress-bar progress-bar-striped bg-success"),d.setAttribute("role","progressbar"),d.setAttribute("style",`width: ${b};`),d.setAttribute("aria-valuenow",`${a.current}`),d.setAttribute("aria-valuemin",0),d.setAttribute("aria-valuemin",`${a.number}`),d.innerHTML=`${b}`,c.appendChild(d),c},createProgressText=a=>{const b=`${a.current}/${a.number}`,c=document.createElement("p1");return c.setAttribute("class","progress-text"),c.innerHTML=`${b}`,c},createPlayButton=()=>{const a=document.createElement("button");a.setAttribute("class","p-2 bd-highlight btn  play-btn flex-right hide"),a.setAttribute("type","button");const b=document.createElement("span");return b.setAttribute("class","material-icons play-btn"),b.setAttribute("job","play"),b.textContent="play_circle",a.appendChild(b),a},dropdownMenu=()=>`<section slot="dropdown">   
            <div class="p-2 bd-highlight btn-group dropright flex-right hide">     
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="material-icons edit-btn">more_horiz</span>
                </button>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="#" job="edit" onclick='handleEdit(event)'>Edit</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="#" job="delete" onclick='handleEdit(event)'>Delete</a>
                </div>
            </div>
        </section>`,styleSheets=()=>`<link rel="stylesheet" href="task.css"/>
        <link rel="stylesheet" href="main.css"/>
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous"/>`;class TaskItem extends HTMLElement{constructor(a){super();const b=this.attachShadow({mode:"open"});this.id=a.id,this.className="taskNode d-flex flex-row bd-highlight",this.draggable="true";const c=createDrag(),d=createCheckmark(),e=createTask(a),f=createProgressBar(a),g=createProgressText(a),h=createPlayButton(),i=document.createElement("slot");i.setAttribute("name","dropdown"),b.innerHTML=styleSheets(),b.appendChild(c),b.appendChild(d),b.appendChild(e),b.appendChild(f),b.appendChild(g),b.appendChild(h),b.appendChild(i)}get checkmark(){return this.shadowRoot.querySelector("input")}get taskName(){return this.shadowRoot.querySelector("p").textContent}connectedCallback(){this.innerHTML=dropdownMenu(),this.shadowRoot.querySelector(".play-btn").addEventListener("click",handleEdit),this.shadowRoot.querySelector(".form-check-input").addEventListener("click",handleEdit)}disconnectedCallback(){this.shadowRoot.querySelector(".play-btn").removeEventListener("click",handleEdit),this.shadowRoot.querySelector(".form-check-input").addEventListener("click",handleEdit)}}customElements.define("task-item",TaskItem),"undefined"!=typeof exports&&(module.exports={TaskItem});