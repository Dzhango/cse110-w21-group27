class TaskList extends HTMLElement{constructor(){super(),this.setAttribute("id","main-container"),this.setAttribute("class","task-container d-flex")}}customElements.define("task-list",TaskList);const taskForm=document.getElementById("taskform");taskForm.addEventListener("submit",addTask);const welcome=document.getElementById("welcome-message");let allTasks;window.onload=function(){const a=localStorage.getItem("allTasks");if(!a||"undefined"===a)allTasks=[];else{allTasks=JSON.parse(a),0!==allTasks.length&&welcome.remove();for(let a=0;a<allTasks.length;a++)renderTask(allTasks[a])}},window.onbeforeunload=function(){localStorage.setItem("allTasks",JSON.stringify(allTasks))};function addTask(a){a.preventDefault();const b={id:Math.random().toString(16).slice(2),completed:!1,name:document.getElementById("task-name").value,number:document.getElementById("task-num").value,current:0,note:document.getElementById("task-note").value};allTasks.push(b),localStorage.setItem("allTasks",JSON.stringify(allTasks)),renderTask(b),taskForm.reset(),welcome.remove(),document.getElementById("add-task-modal").style.display="none"}function renderTask(a){const b=new TaskItem(a);document.querySelector(".task-container").appendChild(b),renderCheckmark(a)}function renderCheckmark(a){document.getElementById(a.id).checkmark.checked=a.completed}function handleCheck(a){const b=a.getRootNode().host.id,c=allTasks.findIndex(a=>a.id===b);allTasks[c].completed=!allTasks[c].completed}function showModalTask(a){const b=a.getRootNode().host;document.getElementById("timer-name").innerText=b.taskName;const c=allTasks.findIndex(a=>a.id===b.id);document.getElementById("timer-note").innerText=allTasks[c].note;const d=b.id;localStorage.setItem("currentTask",JSON.stringify(d))}function handleEdit(a){const b=a.target;let c;a.target.attributes.job&&(c=a.target.attributes.job.value),"delete"===c?deleteTask(b):"edit"===c?document.getElementById("add-task-modal").style.display="block":"play"===c?(document.getElementById("play-modal").style.display="block",showModalTask(b)):"check"===c&&handleCheck(b)}function deleteTask(a){a.closest("task-item").remove();const b=a.closest("task-item").taskName;for(let c=0;c<allTasks.length;c++)if(allTasks[c].name===b){allTasks.splice(c,1),localStorage.setItem("allTasks",JSON.stringify(allTasks));break}}const dropzone=document.getElementById("main-container"),nodes=document.getElementsByClassName("taskNode");let selectedNode,selectedNodePos=0;dropzone.addEventListener("dragstart",a=>{selectedNode=a.target},!1),dropzone.addEventListener("dragover",a=>{a.preventDefault(),whereAmI(a.clientY)}),dropzone.addEventListener("drop",a=>{a.preventDefault(),dropzone.insertBefore(selectedNode,dropzone.children[selectedNodePos]);const b=document.querySelectorAll("task-item"),c=[];for(let d=0;d<b.length;d++){const a=b[d].id,e=allTasks.find(b=>b.id===a);c.push(e)}allTasks=c});function establishNodePositions(){for(let a=0;a<nodes.length;a++){const b=document.getElementById(nodes[a].id),c=b.getBoundingClientRect(),d=c.top,e=c.bottom;nodes[a].yPos=d+(e-d)/2}}function whereAmI(a){establishNodePositions();let b;for(let c=0;c<nodes.length;c++)nodes[c].yPos<a&&(b=document.getElementById(nodes[c].id),selectedNodePos=c+1);"undefined"==typeof b&&(selectedNodePos=0),"undefined"==typeof b&&(selectedNodePos=0)}"undefined"!=typeof exports&&(module.exports={addTask,TaskList});