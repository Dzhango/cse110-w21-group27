let allTasks,dropzone;class TaskList extends HTMLElement{constructor(){super();const a=this.attachShadow({mode:"open"});a.innerHTML=`<link rel="stylesheet" href="task.css"/>
      <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous"/>`}connectedCallback(){function a(){for(let a=0;a<e.length;a++){const b=e[a].getBoundingClientRect(),c=b.top,d=b.bottom;e[a].yPos=c+(d-c)/2}}function b(b,c){a();let d,f=c;for(let a=0;a<e.length;a++)e[a].yPos<b&&(d=e[a],f=a+1);return"undefined"==typeof d&&(f=0),f}document.getElementById("taskform").addEventListener("submit",a=>this.addTask(a));const c=document.createElement("ul");c.setAttribute("id","main-list"),c.setAttribute("class","task-container d-flex"),this.shadowRoot.append(c);const d=localStorage.getItem("allTasks");if(!d||"undefined"===d)allTasks=[];else{allTasks=JSON.parse(d),0!==allTasks.length&&document.getElementById("welcome-message").remove();for(let a=0;a<allTasks.length;a++)this.renderTask(allTasks[a])}dropzone=this.shadowRoot.querySelector("ul");const e=dropzone.getElementsByClassName("taskNode");let f,g=0,h=0,i=!1;dropzone.addEventListener("dragstart",a=>{g=b(a.clientY,g),f=a.target,i=f.checkmark.checked},!1),dropzone.addEventListener("dragover",a=>{a.preventDefault(),h=b(a.clientY,h),g!==h&&(g=b(a.clientY,g),dropzone.insertBefore(f,dropzone.children[h]),f.checkmark.checked=i);const c=[];for(let b=0;b<e.length;b++){const a=e[b].id,d=allTasks.find(b=>b.id===a);c.push(d)}allTasks=c}),dropzone.addEventListener("drop",a=>{a.preventDefault()})}setCurrentTask(a){this.currentTask=a}renderTask(a){const b=document.createElement("task-item");b.setAttribute("id",a.id),b.name=a.name,b.current=a.current,b.number=a.number,b.completed=a.completed,b.setFunctions(this.showModalTask,this.deleteTask,this.editTask,this.setCheck),this.shadowRoot.querySelector("ul").appendChild(b)}addTask(a){a.preventDefault();const b={id:Math.random().toString(16).slice(2),completed:!1,name:document.getElementById("task-name").value,number:document.getElementById("task-num").value,current:0,note:document.getElementById("task-note").value};allTasks.push(b),this.renderTask(b),document.getElementById("taskform").reset();const c=document.getElementById("welcome-message");c&&c.remove(),document.getElementById("add-task-modal").style.display="none"}deleteTask(a){console.log("HERE"),document.getElementById("delete-modal").style.display="block";const b=a.target,c=b.getRootNode().host,d=c.name;document.getElementById("task-delete").innerText=`[${d}]`,document.getElementById("confirm-button").addEventListener("click",()=>{for(let a=0;a<allTasks.length;a++)if(allTasks[a].name===d){allTasks.splice(a,1);break}c.remove(),document.getElementById("delete-modal").style.display="none"})}editTask(a){let b=a.target.getRootNode().host;const c=b.id,d=allTasks.findIndex(a=>a.id===c);document.getElementById("edit-note").value=allTasks[d].note,document.getElementById("edit-name").value=b.name,document.getElementById("edit-num").value=b.number;const f=document.getElementById("edit-modal");f.style.display="block",document.getElementById("editform").addEventListener("submit",function a(c){c.preventDefault();let e=document.getElementById("edit-name").value,g=document.getElementById("edit-num").value,h=document.getElementsByClassName("edit-note").value;b.name=e,b.number=g,allTasks[d].name=e,allTasks[d].number=g,allTasks[d].note=h,f.style.display="none",this.removeEventListener("submit",a)})}setCheck(a){let b=a.target.getRootNode().host;const c=b.id;b.completed="true"===b.completed?"false":"true";const d=allTasks.findIndex(a=>a.id===c);allTasks[d].completed=!allTasks[d].completed}showModalTask(a){document.getElementById("play-modal").style.display="block";const b=a.target.getRootNode().host;document.getElementById("timer-name").innerText=b.name;const c=allTasks.findIndex(a=>a.id===b.id);document.getElementById("timer-note").innerText=allTasks[c].note;const d=b.id;localStorage.setItem("currentTask",JSON.stringify(d))}}customElements.define("task-list",TaskList),window.onbeforeunload=function(){localStorage.setItem("allTasks",JSON.stringify(allTasks))},window.onload=()=>{},"undefined"!=typeof exports&&(module.exports={TaskList});